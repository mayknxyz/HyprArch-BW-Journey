Okay, let's move on to the next file in our HyprArch-BW-Journey!

Based on our updated "Journey Map" from the README.md and the switch to archinstall in the previous step, the next document is:

02-Post-Install-Setup.md: Initial system configuration, user setup, and essential packages.

This file will cover what users need to do immediately after archinstall completes and they boot into their new Arch Linux system for the first time. This includes updating, installing NetworkManager (if not already handled by archinstall properly, though it should be), setting up Pacman, and maybe some initial basic utilities.

Let's start drafting the content for 02-Post-Install-Setup.md.

02-Post-Install-Setup.md Draft
Markdown

# 02 - Post-Installation Setup & Essential Packages

Congratulations on successfully installing your Arch Linux base system using `archinstall`! You've taken the first big step on your HyprArch-BW-Journey.

This guide will walk you through the crucial initial setup after you've rebooted into your fresh Arch installation. This includes ensuring your system is up-to-date, configuring essential services, and installing foundational packages before we dive into Hyprland.

**Reminder on Learning:**
Continue to **type out every command yourself**. This reinforces your understanding and builds proficiency with the Linux command line.

---

## 1. Log In to Your New System

After rebooting, you should see a login prompt (a blank screen with `login:` or a simple text prompt if you don't have a display manager yet, which is expected at this stage).

Log in with the **non-root user** account you created during the `archinstall` process.

```bash
<your_username>
You will then be prompted for your password:

Bash

Password: <your_password>
If successful, you will land in your user's shell prompt (e.g., [your_username@myarchhypr ~]$).

2. Update Your System
It's always the first thing you should do after any new installation to ensure all packages are up-to-date.

Bash

sudo pacman -Syu
Explanation:

sudo: Executes the command with superuser privileges. You'll be prompted for your user's password.

pacman: The Arch Linux package manager.

-Syu: Synchronizes package databases (-S), updates installed packages (-u), and refreshes package lists (-y).

If prompted to proceed with the installation, type y and press Enter.

3. Verify Internet Connection
While archinstall sets up NetworkManager, let's confirm it's working correctly and enabled.

Check NetworkManager status:

Bash

sudo systemctl status NetworkManager
Explanation: This command checks the status of the NetworkManager service. You should see Active: active (running). If it's not active, proceed to the next step.

Enable and start NetworkManager (if not already running):
If NetworkManager was not active, enable it to start on boot and then start it immediately.

Bash

sudo systemctl enable --now NetworkManager
Explanation:

enable: Configures the service to start automatically on system boot.

--now: Starts the service immediately.

Connect to Wi-Fi (if applicable):
If you're on Wi-Fi, you can use nmtui (NetworkManager Text User Interface) or nmcli to connect. nmtui is easier for interactive use.

Bash

nmtui
Explanation: nmtui provides a simple curses-based graphical interface for managing network connections. Use arrow keys to navigate and Enter to select.

Select "Activate a connection" -> Choose your Wi-Fi network -> "Activate".

Enter your password if prompted.

Once connected, select "Back" and then "Quit".

Verify connection:

Bash

ping -c 3 google.com
Explanation: Sends 3 ping requests to https://www.google.com/url?sa=E&source=gmail&q=google.com. You should see replies if your internet connection is active.

4. Set up reflector for Faster Mirrors (Optional but Recommended)
reflector is a script that retrieves the latest Pacman mirror list and ranks them by speed, then updates your /etc/pacman.d/mirrorlist. This can significantly speed up future pacman operations.

Backup your current mirrorlist:

Bash

sudo cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
Explanation: Creates a backup of your current mirrorlist, just in case.

Use reflector to update mirrors:
For users in the Philippines (Davao City), sorting by PH (Philippines) or SG (Singapore) might give the best results.

Bash

sudo reflector --country Philippines --age 24 --sort rate --save /etc/pacman.d/mirrorlist
Explanation:

--country Philippines: Fetches mirrors only from the Philippines. You can add more countries (e.g., --country Philippines,Singapore) if you want broader options.

--age 24: Only includes mirrors synchronized in the last 24 hours (ensures up-to-date mirrors).

--sort rate: Sorts the mirrors by their download rate.

--save /etc/pacman.d/mirrorlist: Saves the generated list to your active mirrorlist.

If you prefer to sort by speed regardless of country:

Bash

sudo reflector --latest 5 --protocol https --sort rate --save /etc/pacman.d/mirrorlist
Explanation: Retrieves the 5 fastest, most recent mirrors using HTTPS protocol.

Refresh Pacman databases:
After updating the mirrorlist, it's good practice to re-sync Pacman.

Bash

sudo pacman -Syy
Explanation: pacman -Syy forces a refresh of all package databases, even if they appear up-to-date.

5. Install yay (AUR Helper - Recommended)
The Arch User Repository (AUR) is a community-driven repository for packages not available in the official Arch repositories. An AUR helper like yay makes installing and managing AUR packages much easier.

Install base-devel (if not already installed by archinstall):
This group contains essential tools for building packages from source (like AUR packages).

Bash

sudo pacman -S --needed base-devel
Explanation: --needed prevents reinstallation if packages are already present.

Clone yay repository:
We will clone the yay Git repository to your home directory.

Bash

git clone [https://aur.archlinux.org/yay.git](https://aur.archlinux.org/yay.git)
Explanation: git clone downloads the repository to a new directory named yay.

Navigate into the yay directory:

Bash

cd yay
Build and install yay:

Bash

makepkg -si
Explanation:

makepkg: Arch Linux utility to build packages from PKGBUILD files.

-s: Installs dependencies.

-i: Installs the package after building.
You will be prompted for your password for sudo operations during the installation of dependencies and yay itself.

Clean up (optional):

Bash

cd ..
rm -rf yay
Explanation: Navigates back to your home directory and removes the yay source directory as it's no longer needed.

Now you can use yay just like pacman to install packages from both official repositories and the AUR. For example, to search for a package: yay <package_name>. To install: yay -S <package_name>. To update your system with yay: yay -Syu.

6. Install Essential Utilities
Before we dive into graphical components, let's install some useful command-line utilities and font packages that will come in handy.

Bash

yay -S --needed htop btop neofetch fastfetch man-db man-pages fish zsh-syntax-highlighting zsh-autosuggestions terminus-font ttf-dejavu ttf-liberation noto-fonts noto-fonts-emoji
Explanation:

htop, btop: Interactive process viewers (modern alternatives to top).

neofetch, fastfetch: System information tools to display your system's details beautifully.

man-db, man-pages: Provides manual pages for commands.

fish, zsh-syntax-highlighting, zsh-autosuggestions: Shell enhancements. We will mostly stick to bash for this guide to keep commands universal, but fish and zsh are popular alternatives for your daily use.

terminus-font, ttf-dejavu, ttf-liberation, noto-fonts, noto-fonts-emoji: Essential fonts for proper text display, including symbols and emojis, to avoid "missing glyph" boxes later.

7. Next Steps
You now have a robust and updated Arch Linux base system with essential utilities and a powerful AUR helper. You're well-prepared for the graphical environment.

Proceed to the next stage of your journey: 03-Hyprland-Installation.md.